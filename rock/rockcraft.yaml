name: ipp-usb
base: ubuntu@24.04
version: "latest"
summary: IPP-over-USB - Driverless IPP printing on USB-connected printers
description: |
  ipp-usb is a daemon that enables driverless IPP printing on USB-connected
  printers. It emulates an IPP network printer, providing full access to the
  physical printer: Printing, scanning, fax out, and the admin web interface.

license: Apache-2.0
adopt-info: ipp-usb
run-user: _daemon_

platforms:
  amd64:
  arm64:
  armhf:

services:
  avahi-daemon:
    command: /scripts/run-avahi.sh
    override: replace
    on-failure: restart
    startup: enabled

  ipp-usb:
    command: /scripts/run-ipp-usb.sh
    startup: enabled
    override: replace
    on-failure: restart
    after: [avahi-daemon]

parts:
  goipp:
    plugin: go
    source: https://github.com/OpenPrinting/goipp.git
    source-type: git
    source-tag: 'v1.2.0'
    source-depth: 1
# ext:updatesnap
#   version-format:
#     lower-than: '2'
#     no-9x-revisions: true
    build-packages:
      - golang-go
    override-prime: ""

  ipp-usb:
    plugin: go
    source: https://github.com/OpenPrinting/ipp-usb.git
    source-type: git
    source-tag: '0.9.30'
    source-depth: 1
# ext:updatesnap
#   version-format:
#     lower-than: '1'
#     no-9x-revisions: true
    override-build: |
      set -eux
      craftctl default
      mkdir -p ${CRAFT_PART_INSTALL}/usr/sbin
      mv ${CRAFT_PART_INSTALL}/bin/ipp-usb ${CRAFT_PART_INSTALL}/usr/sbin/
      mkdir -p ${CRAFT_PART_INSTALL}/etc
      cp ipp-usb.conf ${CRAFT_PART_INSTALL}/etc
      mkdir -p ${CRAFT_PART_INSTALL}/usr/share/ipp-usb/quirks
      cp ipp-usb-quirks/* ${CRAFT_PART_INSTALL}/usr/share/ipp-usb/quirks/
    build-packages:
      - golang-go
      - libavahi-client-dev
      - libavahi-common-dev
      - libavahi-compat-libdnssd-dev
      - libdbus-1-dev
      - ronn
    stage-packages:
      - libavahi-client3
      - libavahi-common3
    prime:
      - etc
      - -etc/init.d
      - usr/sbin
      - -usr/sbin/systemd-hwdb
      - usr/lib
      - usr/share/ipp-usb
    after: [goipp, libusb]

  libusb:
    plugin: autotools
    source: https://github.com/libusb/libusb.git
    source-type: git
    source-tag: 'v1.0.28'
    source-depth: 1
# ext:updatesnap
#   version-format:
#     lower-than: '2'
#     no-9x-revisions: true
    autotools-configure-parameters:
      - --disable-udev
      - --prefix=/usr    
    build-packages:
      - build-essential
      - autoconf
      - automake
      - libtool
      - pkg-config
      - git
    stage:
      - usr/lib/*
      - usr/include/*
    prime:
      - usr/lib/*
      - usr/include/*
    override-build: |
      set -e
      craftctl default
      make -j$CRAFT_PARALLEL_BUILD_COUNT
      make install DESTDIR=$CRAFT_PART_INSTALL

  avahi:
    plugin: autotools
    source: https://github.com/avahi/avahi.git
    source-type: git
    autotools-configure-parameters:
      - --prefix=/usr
      - --disable-qt3
      - --disable-qt4
      - --disable-qt5
      - --disable-gtk
      - --disable-gtk3
      - --disable-gdbm
      - --disable-python
      - --disable-pygtk
      - --disable-python-dbus
      - --disable-mono
      - --disable-monodoc
      - --disable-manpages
      - --disable-xmltoman
      - --with-avahi-user=_daemon_
      - --with-avahi-group=_daemon_
      # - --with-avahi-priv-access-group=netdev
      # - --with-distro=debian
      - --disable-gobject
      - --datadir=/usr/share
      - --libdir=/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}
      - --with-systemdsystemunitdir=/usr/lib/systemd/system
      - --localstatedir=/var
      - --sysconfdir=/etc
    build-packages:
      - g++
      - gcc
      - gettext
      - intltool
      - libdaemon-dev
      - libdbus-1-dev
      - libevent-dev
      - libexpat1-dev
      - libglib2.0-dev
      - libsystemd-dev
      - xmltoman
    override-build: |
        craftctl default
        # for reference sort systemd service files
        sed -i \
            -e 's|\(.*\)avahi-daemon -s.*|\1avahi-daemon -s --no-drop-root|g' \
            -e 's|\(.*\)avahi-daemon -r.*|\1avahi-daemon -r --no-drop-root|g' \
            ${CRAFT_PART_INSTALL}/usr/lib/systemd/system/avahi-daemon.service
        mkdir -p \
            ${CRAFT_PART_INSTALL}/usr/lib/systemd/system/multi-user.target.wants
        ln -sf \
            ../avahi-daemon.service \
            ${CRAFT_PART_INSTALL}/usr/lib/systemd/system/multi-user.target.wants/avahi-daemon.service
        mkdir -p "${CRAFT_PART_INSTALL}/usr/share/dbus-1/"
        cp -r /usr/share/dbus-1/* "${CRAFT_PART_INSTALL}/usr/share/dbus-1/"
    build-environment:
      - LD_LIBRARY_PATH: "${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$CRAFT_STAGE/usr/lib"
    override-prime: |
      set -eux
      craftctl default
      sed -i 's/use-ipv6=yes/use-ipv6=no/' ${CRAFT_PRIME}/etc/avahi/avahi-daemon.conf
      sed -i 's|<user>messagebus</user>|<user>_daemon_</user>|; /<policy user="root">/,/<\/policy>/d' $CRAFT_PRIME/usr/share/dbus-1/system.conf
      sed -i 's/<policy group="netdev">/<policy group="_daemon_">/g; s/<policy user="root">/<policy user="_daemon_">/g' $CRAFT_PRIME/usr/share/dbus-1/system.d/avahi-dbus.conf
    stage-packages:
      - libdaemon0
      - libevent-2.1-7
      - avahi-utils
      - mdns-scan
      # - libavahi-client3
      # - libavahi-common3
    stage:
      - etc/avahi
      - usr
      - -usr/lib/**/libavahi-client.so*
      - -usr/lib/**/libavahi-common.so*
      - -usr/lib/**/*.acd
      - -usr/lib/**/*.la
      - -usr/lib/**/avahi
      - -usr/lib/**/libavahi-glib*
      - -usr/lib/**/libavahi-libevent*
      - -usr/lib/**/libevent-*
      # - -usr/lib/**/libnss_mdns*
      - -usr/lib/**/pkgconfig
      - -usr/include
      - -usr/share/doc
      - -usr/share/man
      - -usr/share/locale
    after: [ipp-usb]

  utils:
    plugin: nil
    overlay-packages:
      - python3
      - dbus
      - libnss-mdns
      - nano
    override-prime: |
      set -eux
      craftctl default

      # Set up Avahi Daemon runtime directory
      AVAHI_RUN_DIR="$CRAFT_PRIME/var/run/avahi-daemon"
      mkdir -p "$AVAHI_RUN_DIR"
      chown 584792:584792 "$AVAHI_RUN_DIR"
      chmod 777 "$AVAHI_RUN_DIR"

      # Set up D-Bus runtime directory
      DBUS_RUN_DIR="$CRAFT_PRIME/var/run/dbus"
      mkdir -p "$DBUS_RUN_DIR"
      chown 584792:584792 "$DBUS_RUN_DIR"
      chmod 777 "$DBUS_RUN_DIR"

      # Set up IPP-USB runtime directories
      IPP_USB_RUN_DIR="$CRAFT_PRIME/var/ipp-usb"
      mkdir -p "$IPP_USB_RUN_DIR"
      chown 584792:584792 "$IPP_USB_RUN_DIR"
      chmod 770 "$IPP_USB_RUN_DIR"

      # Set up lock directory for IPP-USB
      LOCK_DIR="$IPP_USB_RUN_DIR/lock"
      mkdir -p "$LOCK_DIR"
      chown 584792:584792 "$LOCK_DIR"
      chmod 770 "$LOCK_DIR"

      # Set up dev directory for IPP-USB
      DEV_DIR="$IPP_USB_RUN_DIR/dev"
      mkdir -p "$DEV_DIR"
      chown 584792:584792 "$DEV_DIR"
      chmod 770 "$DEV_DIR"

      # Set up log directory for IPP-USB
      LOG_DIR="$CRAFT_PRIME/var/log/ipp-usb"
      mkdir -p "$LOG_DIR"
      chown 584792:584792 "$LOG_DIR"
      chmod 770 "$LOG_DIR"

      # Set up /etc/ipp-usb directory for configuration files
      CONF_DIR="$CRAFT_PRIME/etc/ipp-usb"
      mkdir -p "$CONF_DIR"
      chown 584792:584792 "$CONF_DIR"
      chmod 770 "$CONF_DIR"

      # Create default ipp-usb.conf file if missing
      CONF_FILE="$CONF_DIR/ipp-usb.conf"
      touch "$CONF_FILE"
      chown 584792:584792 "$CONF_FILE"
      chmod 644 "$CONF_FILE"

      # Set up quirks directory
      QUIRKS_DIR="$CRAFT_PRIME/etc/ipp-usb/quirks"
      mkdir -p "$QUIRKS_DIR"
      chown 584792:584792 "$QUIRKS_DIR"
      chmod 770 "$QUIRKS_DIR"

      # Ensure ipp-usb binary is executable and owned by _daemon_
      IPP_USB_BIN="$CRAFT_PRIME/usr/sbin/ipp-usb"
      if [ -f "$IPP_USB_BIN" ]; then
        chown root:584792 "$IPP_USB_BIN"   # Owned by root, but executable by _daemon_
        chmod 750 "$IPP_USB_BIN"           # Only root and _daemon_ can execute
        chmod u+s "$IPP_USB_BIN"           # Set SUID so it runs as root when executed
      fi
    after: [ipp-usb, avahi]

  scripts:
    plugin: dump
    source: scripts/
    organize:
      run-ipp-usb.sh: scripts/run-ipp-usb.sh
      run-avahi.sh: scripts/run-avahi.sh
    override-prime: |
      set -eux
      craftctl default
      if [ -f "$CRAFT_PRIME/scripts/run-ipp-usb.sh" ]; then
        chmod +x "$CRAFT_PRIME/scripts/run-ipp-usb.sh"
      fi
      if [ -f "$CRAFT_PRIME/scripts/run-avahi.sh" ]; then
        chmod +x "$CRAFT_PRIME/scripts/run-avahi.sh"
      fi
    after: [ipp-usb, avahi]
